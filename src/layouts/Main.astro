---
import "../styles/global.css"
import Footer from "../components/Footer.astro"
import Navbar from "../components/Navbar.astro"

type Props = {
	title: string;
}

const { title } = Astro.props;
---
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
        <meta name="description" content="Thor Website" />
        <!-- Title is hardcoded -->
		<title>{title}</title>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,700;1,14..32,700&display=swap" rel="stylesheet">

		<script is:inline>
			const DARK_THEME_CLASS = "dark"
			const COLOUR_MODE = "COLOR_MODE" 
			const LIGHT_THEME = "LIGHT";
			const DARK_THEME = "DARK";

			const rootEl = document.documentElement;

			const getInitialColourMode = () => {
				const previouslySavedColourMode = window.localStorage.getItem(COLOUR_MODE)

				if(previouslySavedColourMode) {
					return previouslySavedColourMode
				}
				
				if(window.matchMedia("(prefers-color-schema: dark").matches) {
					return DARK_THEME
				}
				
				return LIGHT_THEME;
			};

			const initialColourMode = getInitialColourMode()
			
			const setInitialColourMode = (mode) => {
				// set required class on the root element
				if(mode === LIGHT_THEME) {
					rootEl.classList.remove(DARK_THEME_CLASS)
				}else {
					rootEl.classList.add(DARK_THEME_CLASS)
				}
			}

			setInitialColourMode(initialColourMode)
		</script>
	</head>
	<body>
		<main>
			<Navbar />
            <slot />
			<Footer />
        </main>
	</body>
</html>
